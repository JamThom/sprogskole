scalar String

type Question {
  id: ID!
  original: String!
  correctAnswer: String!
  classroomId: String!
}

type Classroom {
  id: ID!
  name: String!
  lastUpdated: String!
}

type Profile {
  id: ID!
  name: String!
  answers: [Answer!]!
}

type ClassroomStatistics {
  questions: Int!
  correctAnswers: Int!
  incorrectAnswers: Int!
}

type Answer {
  id: ID!
  questionId: ID!
  value: String!
  isCorrect: Boolean!
  date: String!
}

type QuestionGroup {
  id: String!
  name: String!
}

type Query {
  questions: [Question]
  answers: [Answer]
  classrooms: [Classroom]
}

type Mutation {
  addQuestion(original: String!, classroomId: String!): Question
  updateQuestion(id: String!, value: String): Question
  addAnswer(questionId: ID!, value: String!): MutationResponse
  addClassroom(name: String!): Classroom
}

type MutationResponse {
  success: Boolean!
  data: Boolean
  error: String
}